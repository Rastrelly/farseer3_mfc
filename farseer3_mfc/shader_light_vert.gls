#version 440 core

layout (location = 0) in vec3 aPos;
layout (location = 1) in vec3 aColor;
layout (location = 2) in vec3 aNormal;
layout (location = 3) in vec2 aTexCoord;

out vec4 vertClr; //vertex color output variable
out vec3 FragPos; //fragment position in world space
out vec3 Normal; //normals
out vec2 texCoord; //texture coords

uniform mat4 model;
uniform mat4 view;
uniform mat4 projection;

void main()
{
	vertClr = vec4(aColor,1.0);
	FragPos = vec3(model * vec4(aPos, 1.0));
	Normal = mat3(transpose(inverse(model))) * aNormal;
	texCoord = aTexCoord;	
	
	gl_Position = projection * view * model * vec4(aPos, 1.0f);
}